name: Validate Secrets & SSH
on:
  workflow_dispatch:
  push:
    branches: ["master","deployment"]
jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_KEY:  ${{ secrets.SSH_KEY }}
      N8N_DIR:  ${{ secrets.N8N_DIR }}
      HEALTHCHECK_URL: ${{ secrets.HEALTHCHECK_URL }}
      BACKUP_IMAGE:    ${{ secrets.BACKUP_IMAGE }}
      RETAIN_DAYS:     ${{ secrets.RETAIN_DAYS }}
    steps:
      - name: Fail if any required secret is missing
        shell: bash
        run: |
          set -euo pipefail
          required=(SSH_HOST SSH_USER SSH_KEY N8N_DIR)
          missing=()
          for k in "${required[@]}"; do
            v="${!k:-}"
            [ -z "$v" ] && missing+=("$k")
          done
          if [ "${#missing[@]}" -gt 0 ]; then
            echo "❌ Missing required secrets: ${missing[*]}"
            exit 1
          fi
          echo "✅ Required secrets present."
      - name: Normalize defaults
        run: echo "SSH_PORT=${SSH_PORT:-22}" >> $GITHUB_ENV

  ssh-smoke-test:
    runs-on: ubuntu-latest
    needs: validate-secrets
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_KEY:  ${{ secrets.SSH_KEY }}
      N8N_DIR:  ${{ secrets.N8N_DIR }}
    steps:
      - name: Prepare SSH key
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          printf "Host *\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null\n" > ~/.ssh/config
      - name: Ping host via SSH
        run: |
          set -euo pipefail
          PORT="${SSH_PORT:-22}"
          timeout 15s ssh -p "$PORT" "$SSH_USER@$SSH_HOST" "echo ok"
      - name: Check dir & docker
        run: |
          set -euo pipefail
          PORT="${SSH_PORT:-22}"
          timeout 20s ssh -p "$PORT" "$SSH_USER@$SSH_HOST" "set -euo pipefail; cd \"$N8N_DIR\" && docker ps >/dev/null"
          echo "✅ Server dir & docker look good."
